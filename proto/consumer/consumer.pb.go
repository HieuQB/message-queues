// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/consumer/consumer.proto

package consumer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublishEventRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	MessageId            string   `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishEventRequest) Reset()         { *m = PublishEventRequest{} }
func (m *PublishEventRequest) String() string { return proto.CompactTextString(m) }
func (*PublishEventRequest) ProtoMessage()    {}
func (*PublishEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e80ff436817566e4, []int{0}
}

func (m *PublishEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishEventRequest.Unmarshal(m, b)
}
func (m *PublishEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishEventRequest.Marshal(b, m, deterministic)
}
func (m *PublishEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishEventRequest.Merge(m, src)
}
func (m *PublishEventRequest) XXX_Size() int {
	return xxx_messageInfo_PublishEventRequest.Size(m)
}
func (m *PublishEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishEventRequest proto.InternalMessageInfo

func (m *PublishEventRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PublishEventRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *PublishEventRequest) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

type PublishEventResponse struct {
	MessageId            string   `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishEventResponse) Reset()         { *m = PublishEventResponse{} }
func (m *PublishEventResponse) String() string { return proto.CompactTextString(m) }
func (*PublishEventResponse) ProtoMessage()    {}
func (*PublishEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e80ff436817566e4, []int{1}
}

func (m *PublishEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishEventResponse.Unmarshal(m, b)
}
func (m *PublishEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishEventResponse.Marshal(b, m, deterministic)
}
func (m *PublishEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishEventResponse.Merge(m, src)
}
func (m *PublishEventResponse) XXX_Size() int {
	return xxx_messageInfo_PublishEventResponse.Size(m)
}
func (m *PublishEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishEventResponse proto.InternalMessageInfo

func (m *PublishEventResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func init() {
	proto.RegisterType((*PublishEventRequest)(nil), "consumer.PublishEventRequest")
	proto.RegisterType((*PublishEventResponse)(nil), "consumer.PublishEventResponse")
}

func init() { proto.RegisterFile("proto/consumer/consumer.proto", fileDescriptor_e80ff436817566e4) }

var fileDescriptor_e80ff436817566e4 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xce, 0xcf, 0x2b, 0x2e, 0xcd, 0x4d, 0x2d, 0x82, 0x33, 0xf4, 0xc0, 0xe2, 0x42,
	0x1c, 0x30, 0xbe, 0x52, 0x1c, 0x97, 0x70, 0x40, 0x69, 0x52, 0x4e, 0x66, 0x71, 0x86, 0x6b, 0x59,
	0x6a, 0x5e, 0x49, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x08, 0x17, 0x6b, 0x49, 0x7e,
	0x41, 0x66, 0xb2, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x23, 0x24, 0xc4, 0xc5, 0x92,
	0x94, 0x9f, 0x52, 0x29, 0xc1, 0x04, 0x16, 0x04, 0xb3, 0x85, 0x64, 0xb9, 0xb8, 0x72, 0x53, 0x8b,
	0x8b, 0x13, 0xd3, 0x53, 0xe3, 0x33, 0x53, 0x24, 0x98, 0xc1, 0x32, 0x9c, 0x50, 0x11, 0xcf, 0x14,
	0x25, 0x53, 0x2e, 0x11, 0x54, 0xf3, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xd1, 0xb4, 0x31, 0xa1,
	0x69, 0x33, 0x8a, 0xe6, 0xe2, 0x70, 0x86, 0x3a, 0x51, 0xc8, 0x9f, 0x8b, 0x07, 0xd9, 0x08, 0x21,
	0x59, 0x3d, 0xb8, 0x6f, 0xb0, 0x38, 0x5d, 0x4a, 0x0e, 0x97, 0x34, 0xc4, 0x66, 0x25, 0x06, 0x27,
	0xae, 0x28, 0xb8, 0xff, 0x93, 0xd8, 0xc0, 0x01, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x18,
	0x28, 0xca, 0xf6, 0x31, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsumerClient is the client API for Consumer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsumerClient interface {
	PublishEvent(ctx context.Context, in *PublishEventRequest, opts ...grpc.CallOption) (*PublishEventResponse, error)
}

type consumerClient struct {
	cc *grpc.ClientConn
}

func NewConsumerClient(cc *grpc.ClientConn) ConsumerClient {
	return &consumerClient{cc}
}

func (c *consumerClient) PublishEvent(ctx context.Context, in *PublishEventRequest, opts ...grpc.CallOption) (*PublishEventResponse, error) {
	out := new(PublishEventResponse)
	err := c.cc.Invoke(ctx, "/consumer.Consumer/PublishEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsumerServer is the server API for Consumer service.
type ConsumerServer interface {
	PublishEvent(context.Context, *PublishEventRequest) (*PublishEventResponse, error)
}

// UnimplementedConsumerServer can be embedded to have forward compatible implementations.
type UnimplementedConsumerServer struct {
}

func (*UnimplementedConsumerServer) PublishEvent(ctx context.Context, req *PublishEventRequest) (*PublishEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishEvent not implemented")
}

func RegisterConsumerServer(s *grpc.Server, srv ConsumerServer) {
	s.RegisterService(&_Consumer_serviceDesc, srv)
}

func _Consumer_PublishEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsumerServer).PublishEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumer.Consumer/PublishEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsumerServer).PublishEvent(ctx, req.(*PublishEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Consumer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "consumer.Consumer",
	HandlerType: (*ConsumerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishEvent",
			Handler:    _Consumer_PublishEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/consumer/consumer.proto",
}
