// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	broker "github.com/micro/go-micro/v2/broker"

	mock "github.com/stretchr/testify/mock"
)

// Event is an autogenerated mock type for the Event type
type Event struct {
	mock.Mock
}

// Ack provides a mock function with given fields:
func (_m *Event) Ack() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Error provides a mock function with given fields:
func (_m *Event) Error() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Message provides a mock function with given fields:
func (_m *Event) Message() *broker.Message {
	ret := _m.Called()

	var r0 *broker.Message
	if rf, ok := ret.Get(0).(func() *broker.Message); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*broker.Message)
		}
	}

	return r0
}

// Topic provides a mock function with given fields:
func (_m *Event) Topic() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
