// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	broker "github.com/micro/go-micro/v2/broker"

	mock "github.com/stretchr/testify/mock"
)

// EventHandler is an autogenerated mock type for the EventHandler type
type EventHandler struct {
	mock.Mock
}

// AutoAck provides a mock function with given fields:
func (_m *EventHandler) AutoAck() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Handle provides a mock function with given fields: p
func (_m *EventHandler) Handle(p broker.Event) error {
	ret := _m.Called(p)

	var r0 error
	if rf, ok := ret.Get(0).(func(broker.Event) error); ok {
		r0 = rf(p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// QueueName provides a mock function with given fields:
func (_m *EventHandler) QueueName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Topic provides a mock function with given fields:
func (_m *EventHandler) Topic() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
